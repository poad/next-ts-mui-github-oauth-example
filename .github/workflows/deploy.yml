name: Deploy

on:
  push:
    branches:
    - main

  workflow_dispatch:

env:
  OIDC_IAM_ROLE_ARN: ${{ secrets.OIDC_IAM_ROLE_ARN }}
  AWS_REGION: us-west-2
  API_ENDPOINT_URL_PARAM: /next-ts-mui-github-oauth-example/API_ENDPOINT

permissions:
  id-token: write
  contents: read

jobs:
  test:
    strategy:
      matrix:
        node-version: [20.x]

    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.OIDC_IAM_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}

    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: latest
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]
          - args: [--global, aws-cdk]

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.8.1
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true

    - name: Setup global dir for pnpm
      shell: bash
      run: |
        echo "PNPM_HOME=/usr/local/bin" >> $GITHUB_ENV

    - name: deploy (cdk)
      working-directory: backend
      run: |
        cdk deploy \
          -c clientId=${{ secrets.NEXT_PUBLIC_GITHUB_CLIENT_ID }} \
          -c clientSecret=${{ secrets.NEXT_PUBLIC_GITHUB_CLIENT_SECRET }} \
          -c parameterName=${{ env.API_ENDPOINT_URL_PARAM }}

    - name: Get Parameters
      uses: poad/get-aws-ssm-parameter@v1.0.0
      id: get-param
      with:
        parameter-name: ${{ env.API_ENDPOINT_URL_PARAM }}
        aws-region: us-west-2

    - name: deploy (frontend)
      working-directory: frontend/cdk
      run: |
        cdk deploy \
          -c appkName=next-ts-mui-github-oauth-example \
          -c clientId=${{ secrets.NEXT_PUBLIC_GITHUB_CLIENT_ID }} \
          -c apiUrl=${{ steps.get-param.outputs.value }}

